"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CdpToolkit = void 0;
const tools_1 = require("@langchain/core/tools");
const cdp_agentkit_core_1 = require("@coinbase/cdp-agentkit-core");
const cdp_tool_1 = require("../tools/cdp_tool");
/**
 * Coinbase Developer Platform (CDP) Toolkit.
 *
 * Security Note: This toolkit contains tools that can read and modify
 * the state of a service; e.g., by creating, deleting, or updating,
 * reading underlying data.
 *
 * For example, this toolkit can be used to create wallets, transactions,
 * and smart contract invocations on CDP supported blockchains.
 *
 * Setup:
 * You will need to set the following environment variables:
 * ```bash
 * export CDP_API_KEY_NAME="cdp-api-key-name"
 * export CDP_API_KEY_PRIVATE_KEY="cdp-api-key-private-key"
 * export NETWORK_ID="network-id"
 * ```
 *
 * Example usage:
 * ```typescript
 * const agentkit = await CdpAgentkit.configureWithWallet();
 * const toolkit = new CdpToolkit(agentkit);
 * const tools = toolkit.getTools();
 *
 * // Available tools include:
 * // - get_wallet_details
 * // - get_balance
 * // - request_faucet_funds
 * // - transfer
 * // - trade
 * // - deploy_token
 * // - mint_nft
 * // - deploy_nft
 * // - register_basename
 * // - wow_create_token
 * // - wow_buy_token
 * // - wow_sell_token
 * ```
 */
class CdpToolkit extends tools_1.BaseToolkit {
    /**
     * Creates a new CDP Toolkit instance
     *
     * @param agentkit - CDP agentkit instance
     */
    constructor(agentkit) {
        super();
        const actions = cdp_agentkit_core_1.CDP_ACTIONS;
        const tools = actions.map(action => new cdp_tool_1.CdpTool(action, agentkit));
        this.tools = tools;
    }
}
exports.CdpToolkit = CdpToolkit;
